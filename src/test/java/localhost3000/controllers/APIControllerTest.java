/*
 * BATesterLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package localhost3000.controllers;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import io.apimatic.core.utilities.TestHelper;
import localhost3000.BATesterClient;
import localhost3000.exceptions.ApiException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

public class APIControllerTest extends BaseControllerTest {

    /**
     * Client instance.
     */
    private static BATesterClient client;
    
    /**
     * Controller instance (for all tests).
     */
    private static APIController controller;

    /**
     * Setup test class.
     */
    @BeforeClass
    public static void setUpClass() {
        client = createConfiguration();
        controller = client.getAPIController();
    }

    /**
     * Tear down test class.
     */
    @AfterClass
    public static void tearDownClass() {
        controller = null;
    }

    /**
     * Test case for BasicAuthTest.
     * @throws Throwable exception if occurs.
     */
    @Test
    public void testBasicAuthTest() throws Exception {

        // Set callback and perform API call
        String result = null;
        try {
            result = controller.getBasicAuthTest();
        } catch (ApiException e) {
            // Empty block
        }

        // Test whether the response is null
        assertNotNull("Response is null", 
                httpResponse.getResponse());
        // Test response code
        assertEquals("Status is not 200", 
                200, httpResponse.getResponse().getStatusCode());

        // Test whether the captured response is as we expected
        assertNotNull("Result does not exist", 
                result);
        assertEquals("Response body does not match exactly",
                "You've passed the test!",
                TestHelper.convertStreamToString(httpResponse.getResponse().getRawBody()));
    }

}
